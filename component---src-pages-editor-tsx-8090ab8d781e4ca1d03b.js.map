{"version":3,"sources":["webpack:///./src/components/editorWelcome/index.tsx","webpack:///./src/components/tutorialEditor/hintInput.tsx","webpack:///./src/components/tutorialEditor/DiscardModal.tsx","webpack:///./src/utils/exportTutorial.ts","webpack:///./src/components/tutorialEditor/tutorialModal.tsx","webpack:///./src/components/tutorialEditor/header.tsx","webpack:///./node_modules/@iconify-icons/feather/chevron-up.js","webpack:///./node_modules/@iconify-icons/feather/chevron-down.js","webpack:///./node_modules/@iconify-icons/bx/bx-trash-alt.js","webpack:///./src/components/tutorialEditor/stepContent.tsx","webpack:///./src/components/tutorialEditor/index.tsx","webpack:///./src/pages/editor.tsx"],"names":["StyledEditorContainer","styled","div","background","StyledWelcomeContainer","textPrimary","StyledWelcomeHeader","header","grey","StyledWelcomeSection","main","textSecondary","StyledWelcomeInfo","StyledLink","a","accent","StyledCard","codeColor","StyledUpload","props","dragState","StyledWelcomeSidebar","EditorWelcome","useState","draggedOver","setDraggedOver","useGlobal","editorState","setEditorState","setEditorSteps","uploadInput","useRef","handleUpload","current","files","text","uploadedText","Error","jsonifiedData","JSON","parse","convertedInstructions","instructions","map","instruction","stepTitle","title","stepHint","hint","stepSuccess","output","successMessage","content","answer","join","selectedTutorial","tutorialTitle","selectedTutorialDesc","description","alert","onClick","click","onDragEnter","onDragLeave","type","accept","ref","onChange","href","target","StyledTextBox","input","HintInput","attributeName","value","setValue","placeholder","event","CloseButton","Icon","StyledModalHeader","h1","StyledCloseButtons","DiscardModal","isOpen","closeModal","discardFunction","exportFunction","onRequestClose","style","backgroundColor","color","width","height","padding","position","left","transform","overlay","zIndex","ariaHideApp","role","tabIndex","onKeyDown","icon","closeIcon","outputError","submitFunction","exportTutorial","tutName","tutDesc","tutSteps","newTutSteps","step","split","filter","string","length","tutorialObject","instructons","blob","Blob","stringify","URL","createObjectURL","link","document","createElement","setAttribute","body","appendChild","removeChild","StyledLabel","StyledInput","StyledTextArea","textarea","TutorialModal","e","StyledHeaderContainer","StyledHeaderRow","StyledMarginWrapper","AlignCenter","AlignRight","Header","tutorialModal","setTutorialModal","discardModal","setDiscardModal","editorSteps","addTutorialStep","newSteps","Date","getTime","removeTutorialStep","toRemoveIndex","_","index","Math","min","goToStep","newStep","saveTutorial","toString","key","undefined","ContentBlock","ContentBlockInnerWrapper","visible","UpDownContainer","Arrow","TextInput","DeleteBlock","TrashIcon","StepContent","deleteBlock","changeHandler","changeOrder","toggleBlockType","hovering","setHovering","codeInputStyle","display","onMouseEnter","onMouseLeave","chevronUp","chevronDown","customStyles","code","bxTrashAlt","StyledEditor","MainWrapper","StyledTitle","StyledLeftHalf","StyledRightHalf","StyledStepSection","StyledTextInput","label","StepContentBody","TutEditor","steps","setSteps","setStepState","slice","stepCopy","direction","contentCopy","diff","temp","blockChangeHandler","change","changeText","changeEditorStepDetail","attribute","push","initializeGlobalState","EditorPage"],"mappings":"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","file":"component---src-pages-editor-tsx-8090ab8d781e4ca1d03b.js","sourcesContent":["import React, { useGlobal, useRef, useState } from \"reactn\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\n\nimport { Navbar } from \"../navbar\";\nimport {\n  grey,\n  accent,\n  background,\n  codeColor,\n  textPrimary,\n  textSecondary\n} from \"../../constants\";\n\nimport { Instruction } from \"../../types\";\nimport { EditorStep } from \"../../types/editorTypes\";\n\nconst StyledEditorContainer: AnyStyledComponent = styled.div`\n  width: 100vw;\n  display: flex;\n  flex-direction: row;\n  justify-items: stretch;\n  background: ${background};\n  overflow: auto;\n`;\n\nconst StyledWelcomeContainer: AnyStyledComponent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  h2 {\n    color: ${textPrimary};\n    font-size: 24px;\n    margin: 0 0 0.5rem 0;\n  }\n`;\n\nconst StyledWelcomeHeader: AnyStyledComponent = styled.header`\n  padding: 1rem;\n  border: 1px solid ${grey};\n  border-left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledWelcomeSection: AnyStyledComponent = styled.main`\n  padding: 4rem 4rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n\n  h1 {\n    color: ${textPrimary};\n    font-size: 48px;\n    margin-bottom: 1rem;\n  }\n\n  p,\n  ul {\n    color: ${textSecondary};\n  }\n`;\n\nconst StyledWelcomeInfo: AnyStyledComponent = styled.div`\n  flex: 2;\n  padding-right: 2rem;\n`;\n\nconst StyledLink: AnyStyledComponent = styled.a`\n  color: ${accent};\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledCard: AnyStyledComponent = styled.div`\n  max-width: 800px;\n  margin: 2rem 4rem 2rem 0;\n  padding: 1rem;\n  background: ${codeColor};\n  border-radius: 2px;\n`;\n\ntype StyledUploadProps = {\n  dragState: boolean;\n};\n\nconst StyledUpload: AnyStyledComponent = styled.div`\n  max-width: 800px;\n  margin: 2rem 4rem 2rem 0;\n  padding: 1rem;\n  background: ${(props: StyledUploadProps): string =>\n    props.dragState ? \"#797986\" : codeColor};\n  border-radius: 2px;\n  position: relative;\n\n  p {\n    color: ${accent};\n  }\n\n  input {\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n  }\n\n  &:hover {\n    cursor: pointer;\n    border: dashed ${accent} 4px;\n  }\n`;\n\nconst StyledWelcomeSidebar: AnyStyledComponent = styled.div`\n  flex: 1;\n`;\n\nconst EditorWelcome: React.FC = () => {\n  const [draggedOver, setDraggedOver] = useState(false);\n  const [editorState, setEditorState] = useGlobal(\"editorState\");\n  const [, setEditorSteps] = useGlobal(\"editorSteps\");\n  const uploadInput = useRef<HTMLInputElement>(null);\n\n  const createNewTutorial = (): void => {\n    // Change the view from the editor welcome screen to the tutorial editor\n    setEditorState({ ...editorState, selectedTutorial: \"New Tutorial\" });\n  };\n\n  const uploadNewTutorial = (): void => {\n    if (uploadInput.current !== null) {\n      uploadInput.current.click();\n    }\n  };\n\n  const handleDragEnter = (): void => {\n    setDraggedOver(true);\n  };\n\n  const handleDragLeave = (): void => {\n    setDraggedOver(false);\n  };\n\n  const handleUpload = async (): Promise<void> => {\n    if (uploadInput.current?.files !== null) {\n      // Lazy way of making sure that no errors occur due to improperly\n      // formatted JSON files\n      try {\n        const uploadedText = await uploadInput.current?.files[0].text();\n\n        if (!uploadedText) {\n          throw Error(\"Looks like your file is empty\");\n        }\n\n        const jsonifiedData = JSON.parse(uploadedText);\n\n        // Load in the instructions of the tutorial file into the tutorial editor\n        const convertedInstructions = jsonifiedData.instructions.map(\n          (instruction: Instruction): EditorStep => ({\n            stepTitle: instruction.title,\n            stepHint: instruction.hint,\n            stepSuccess: instruction.output.successMessage,\n            content: instruction.content,\n            answer: instruction.answer.join(\"\\n\")\n          })\n        );\n        setEditorSteps(convertedInstructions);\n        // Load in the basic information of the tutorial file into the editor\n        // Also change the view to the tutorial editor\n        setEditorState({\n          ...editorState,\n          selectedTutorial: jsonifiedData.tutorialTitle,\n          selectedTutorialDesc: jsonifiedData.description\n        });\n      } catch (error) {\n        // eslint-disable-next-line\n        alert(error);\n        setDraggedOver(false);\n      }\n    }\n  };\n\n  return (\n    <StyledEditorContainer>\n      <Navbar />\n      <StyledWelcomeContainer>\n        <StyledWelcomeHeader>\n          <h2>Tutorial Editor</h2>\n        </StyledWelcomeHeader>\n        <StyledWelcomeSection>\n          <StyledWelcomeInfo>\n            <h1>Propguard Editor</h1>\n            <p>Pass the torch to the next generation by writing tutorials.</p>\n            <StyledCard>\n              <h2>Modify</h2>\n              <p>Modification features are coming soon!</p>\n            </StyledCard>\n            <StyledCard>\n              <h2>Create</h2>\n              <StyledLink onClick={createNewTutorial}>\n                Create a brand new tutorial from scratch\n              </StyledLink>\n            </StyledCard>\n            <StyledUpload\n              onClick={uploadNewTutorial}\n              onDragEnter={handleDragEnter}\n              onDragLeave={handleDragLeave}\n              dragState={draggedOver}\n            >\n              <div>\n                <h2>Upload</h2>\n                <p>Upload an existing JSON tutorial.</p>\n              </div>\n              <input\n                type=\"file\"\n                accept=\".json\"\n                ref={uploadInput}\n                onChange={handleUpload}\n              />\n            </StyledUpload>\n          </StyledWelcomeInfo>\n          <StyledWelcomeSidebar>\n            <h2>Need to update propguard?</h2>\n            <p>\n              <StyledLink\n                href=\"https://github.com/MissouriMRR/propguard/blob/master/contributing-tutorials.md\"\n                target=\"blank\"\n              >\n                Click here\n              </StyledLink>{\" \"}\n              for instructions on updating the live Propguard instance or\n              contact one of the maintainers below.\n            </p>\n            <ul>\n              <li>Tommy Dong</li>\n              <li>Henri Evjen</li>\n              <li>Jack Novatny</li>\n            </ul>\n          </StyledWelcomeSidebar>\n        </StyledWelcomeSection>\n      </StyledWelcomeContainer>\n    </StyledEditorContainer>\n  );\n};\n\nexport { EditorWelcome };\n","import React from \"react\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\n\nimport { codeColor } from \"../../constants\";\n\nconst StyledTextBox: AnyStyledComponent = styled.input`\n  height: 46px;\n  width: 100%;\n  color: white;\n  background-color: ${codeColor};\n  outline: none;\n  padding: 14px;\n  border: none;\n  border-radius: 2px;\n`;\n\ninterface HintProps {\n  attributeName: string;\n  value: string;\n  setValue: (attributeName: string, value: string) => void;\n  placeholder: string;\n}\n\nconst HintInput: React.FC<HintProps> = ({\n  attributeName,\n  value,\n  setValue,\n  placeholder\n}): JSX.Element => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    return setValue(attributeName, event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <StyledTextBox\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport { HintInput };\n","import React from \"react\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify/icons-mdi/close\";\n\nimport { Button } from \"../button\";\nimport { accent, outputError } from \"../../constants\";\n\nconst CloseButton: AnyStyledComponent = styled(Icon)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  font-size: 24px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledModalHeader = styled.h1`\n  font-size: 24px;\n`;\n\nconst StyledCloseButtons = styled.div`\n  & > * {\n    margin-right: 1rem;\n  }\n`;\n\ninterface HintModalProps {\n  isOpen: boolean;\n  closeModal: () => void;\n  discardFunction: () => void;\n  exportFunction: () => void;\n}\n\nconst DiscardModal: React.FC<HintModalProps> = ({\n  isOpen,\n  closeModal,\n  discardFunction,\n  exportFunction\n}): JSX.Element => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      // This modal library doesn't play well with regular styled components\n      style={{\n        content: {\n          backgroundColor: \"#262626\",\n          color: \"#ffffff\",\n          width: 500,\n          height: 200,\n          padding: \"2rem\",\n          position: \"relative\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\"\n        },\n        overlay: {\n          zIndex: 100\n        }\n      }}\n      ariaHideApp={false}\n    >\n      <div\n        role=\"button\"\n        tabIndex={0}\n        onClick={closeModal}\n        onKeyDown={closeModal}\n      >\n        <CloseButton icon={closeIcon} />\n      </div>\n\n      <StyledModalHeader>\n        Warning, you are about to Discard your progress!\n      </StyledModalHeader>\n\n      <StyledCloseButtons>\n        <Button\n          backgroundColor={outputError}\n          text=\"Discard\"\n          submitFunction={discardFunction}\n        />\n        <Button\n          backgroundColor={accent}\n          width=\"10rem\"\n          text=\"Save and export\"\n          submitFunction={exportFunction}\n        />\n      </StyledCloseButtons>\n    </Modal>\n  );\n};\n\nexport { DiscardModal };\n","import { EditorStep } from \"../types/editorTypes\";\n\n// Converts the stringified answer key into an array of strings,\n// with each element representing a line of code\nconst convertAnswer = (answer: string): string[] => {\n  const newAnswer = answer.split(\"\\n\").filter(string => string.length !== 0);\n  return newAnswer;\n};\n\n/**\n * Used to take the current state of the tutorial Editor and export it\n * into a JSON file that can be used to import a tutorial for the user.\n * Uses native JavaScript to build the JSON and then prompt the user\n * to download it.\n */\nexport const exportTutorial = async (\n  tutName: string,\n  tutDesc: string,\n  tutSteps: EditorStep[]\n): Promise<void> => {\n  // First, convert the application state into the correct format\n  // of the JSON files that we use to read in tutorials\n  const newTutSteps = tutSteps.map((step: EditorStep) => {\n    return {\n      title: step.stepTitle,\n      hint: step.stepHint,\n      content: step.content,\n      answer: convertAnswer(step.answer),\n      output: {\n        successMessage: step.stepSuccess\n      }\n    };\n  });\n\n  const tutorialObject = {\n    tutorialTitle: tutName,\n    description: tutDesc,\n    instructons: newTutSteps\n  };\n\n  const blob = new Blob([JSON.stringify(tutorialObject)], {\n    type: \"application/json\"\n  });\n  const href = await URL.createObjectURL(blob);\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", href);\n  link.setAttribute(\"download\", `${tutName}.json`);\n  // Apparently required to make it work on Firefox. Keeping this here\n  // so we can maximize compatibility.\n  document.body.appendChild(link);\n  // This will prompt the user to download the exported tutorial\n  link.click();\n  document.body.removeChild(link);\n};\n","import React, { useGlobal } from \"reactn\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\nimport Modal from \"react-modal\";\n\nimport { Icon } from \"@iconify/react\";\nimport closeIcon from \"@iconify/icons-mdi/close\";\nimport { codeColor, textPrimary } from \"../../constants\";\n\nconst CloseButton: AnyStyledComponent = styled(Icon)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  font-size: 24px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledLabel = styled.h1`\n  font-size: 18px;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background-color: ${codeColor};\n  border: 0;\n  border-radius: 2px;\n  color: ${textPrimary};\n`;\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  padding: 0.5rem;\n  background-color: ${codeColor};\n  border: 0;\n  border-radius: 2px;\n  color: ${textPrimary};\n`;\n\ninterface HintModalProps {\n  isOpen: boolean;\n  closeModal: () => void;\n}\n\nconst TutorialModal: React.FC<HintModalProps> = ({\n  isOpen,\n  closeModal\n}): JSX.Element => {\n  const [editorState, setEditorState] = useGlobal(\"editorState\");\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      // This modal library doesn't play well with regular styled components\n      style={{\n        content: {\n          backgroundColor: \"#262626\",\n          color: \"#ffffff\",\n          width: 500,\n          height: 300,\n          padding: \"2rem\",\n          position: \"relative\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\"\n        },\n        overlay: {\n          zIndex: 100\n        }\n      }}\n      ariaHideApp={false}\n    >\n      <div\n        role=\"button\"\n        tabIndex={0}\n        onClick={closeModal}\n        onKeyDown={closeModal}\n      >\n        <CloseButton icon={closeIcon} />\n      </div>\n\n      <StyledLabel>Tutorial Title</StyledLabel>\n      <StyledInput\n        type=\"text\"\n        value={editorState.selectedTutorial}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>): void => {\n          setEditorState({ ...editorState, selectedTutorial: e.target.value });\n        }}\n      />\n\n      <StyledLabel>Tutorial Description</StyledLabel>\n      <StyledTextArea\n        value={editorState.selectedTutorialDesc}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n          setEditorState({\n            ...editorState,\n            selectedTutorialDesc: e.target.value\n          });\n        }}\n      />\n    </Modal>\n  );\n};\n\nexport { TutorialModal };\n","import React, { useState, useGlobal } from \"reactn\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\n\nimport { Button } from \"../button\";\nimport { DiscardModal } from \"./DiscardModal\";\nimport { exportTutorial } from \"../../utils/exportTutorial\";\nimport { TutorialModal } from \"./tutorialModal\";\n\nimport { accent, grey, outputError, textPrimary } from \"../../constants\";\n\nconst StyledHeaderContainer: AnyStyledComponent = styled.header`\n  border-top: 1px solid ${grey};\n  border-right: 1px solid ${grey};\n  padding: 0 2rem 0 2rem;\n`;\n\nconst StyledHeaderRow: AnyStyledComponent = styled.div`\n  margin-bottom: 1rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  align-items: end;\n\n  h1 {\n    color: ${textPrimary};\n    font-size: 24px;\n  }\n`;\n\nconst StyledMarginWrapper: AnyStyledComponent = styled.div`\n  & > * {\n    margin-right: 0.5rem;\n  }\n`;\n\nconst AlignCenter: AnyStyledComponent = styled.div`\n  place-self: center;\n`;\n\nconst AlignRight: AnyStyledComponent = styled.div`\n  place-self: end;\n`;\n\nconst Header = (): JSX.Element => {\n  const [tutorialModal, setTutorialModal] = useState(false);\n  const [discardModal, setDiscardModal] = useState(false);\n  const [editorState, setEditorState] = useGlobal(\"editorState\");\n  const [editorSteps, setEditorSteps] = useGlobal(\"editorSteps\");\n\n  const addTutorialStep = async (): Promise<void> => {\n    const newSteps = [\n      ...editorSteps,\n      {\n        stepTitle: `New step ${new Date().getTime()}`,\n        stepHint: \"\",\n        stepSuccess: \"\",\n        content: [\n          {\n            type: \"code\",\n            value: \"\"\n          }\n        ],\n        answer: \"\"\n      }\n    ];\n    await setEditorSteps(newSteps);\n  };\n\n  const removeTutorialStep = async (toRemoveIndex: number): Promise<void> => {\n    if (editorSteps.length <= 1) return;\n    const newSteps = editorSteps.filter((_, index) => index !== toRemoveIndex);\n\n    await setEditorState({\n      ...editorState,\n      step: Math.min(editorState.step, editorSteps.length - 2)\n    });\n    await setEditorSteps(newSteps);\n  };\n\n  const goToStep = async (step: number): Promise<void> => {\n    let newStep = step;\n    if (step < 0) {\n      newStep = 0;\n    } else if (step >= editorSteps.length) {\n      newStep = editorSteps.length - 1;\n    }\n\n    await setEditorState({\n      ...editorState,\n      step: newStep\n    });\n  };\n\n  const saveTutorial = async (): Promise<void> => {\n    await exportTutorial(\n      editorState.selectedTutorial,\n      editorState.selectedTutorialDesc,\n      editorSteps\n    );\n  };\n\n  const discardTutorial = (): void => {\n    setEditorState({\n      ...editorState,\n      selectedTutorial: \"\"\n    });\n  };\n\n  return (\n    <StyledHeaderContainer>\n      <TutorialModal\n        isOpen={tutorialModal}\n        closeModal={(): void => setTutorialModal(false)}\n      />\n      <DiscardModal\n        isOpen={discardModal}\n        closeModal={(): void => setDiscardModal(false)}\n        discardFunction={discardTutorial}\n        exportFunction={saveTutorial}\n      />\n      <StyledHeaderRow>\n        <Button\n          text=\"Edit info\"\n          submitFunction={(): void => setTutorialModal(true)}\n          width=\"10rem\"\n        />\n        <AlignCenter>\n          <h1>{editorState.selectedTutorial}</h1>\n        </AlignCenter>\n        <AlignRight>\n          <Button\n            backgroundColor={outputError}\n            text=\"Discard progress\"\n            submitFunction={(): void => setDiscardModal(true)}\n            width=\"12rem\"\n          />\n        </AlignRight>\n      </StyledHeaderRow>\n\n      <StyledHeaderRow>\n        <StyledMarginWrapper>\n          <Button\n            text=\"Add step\"\n            submitFunction={addTutorialStep}\n            width=\"10rem\"\n          />\n          <Button\n            text=\"Delete step\"\n            submitFunction={(): Promise<void> =>\n              removeTutorialStep(editorState.step)\n            }\n            width=\"10rem\"\n          />\n        </StyledMarginWrapper>\n        <AlignCenter>\n          <StyledMarginWrapper>\n            <Button\n              text=\"Prev\"\n              submitFunction={(): Promise<void> =>\n                goToStep(editorState.step - 1)\n              }\n              width=\"6rem\"\n            />\n            {editorSteps.map((step, index) => (\n              <Button\n                text={index.toString()}\n                // Ensures that keys are unique\n                key={`${step.stepTitle}_${new Date().getTime()}`}\n                submitFunction={(): Promise<void> => goToStep(index)}\n                width=\"2.5rem\"\n                backgroundColor={\n                  index === editorState.step ? accent : undefined\n                }\n              />\n            ))}\n            <Button\n              text=\"Next\"\n              submitFunction={(): Promise<void> =>\n                goToStep(editorState.step + 1)\n              }\n              width=\"6rem\"\n            />\n          </StyledMarginWrapper>\n        </AlignCenter>\n        <AlignRight>\n          <Button\n            backgroundColor={accent}\n            text=\"Save and export\"\n            submitFunction={saveTutorial}\n            width=\"12rem\"\n          />\n        </AlignRight>\n      </StyledHeaderRow>\n    </StyledHeaderContainer>\n  );\n};\n\nexport { Header };\n","var data = {\n  \"body\": \"<g fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"><path d=\\\"M18 15l-6-6l-6 6\\\"/></g>\",\n  \"width\": 24,\n  \"height\": 24\n};\nexport default data;","var data = {\n  \"body\": \"<g fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"><path d=\\\"M6 9l6 6l6-6\\\"/></g>\",\n  \"width\": 24,\n  \"height\": 24\n};\nexport default data;","var data = {\n  \"body\": \"<path d=\\\"M15 2H9c-1.103 0-2 .897-2 2v2H3v2h2v12c0 1.103.897 2 2 2h10c1.103 0 2-.897 2-2V8h2V6h-4V4c0-1.103-.897-2-2-2zM9 4h6v2H9V4zm8 16H7V8h10v12z\\\" fill=\\\"currentColor\\\"/>\",\n  \"width\": 24,\n  \"height\": 24\n};\nexport default data;","import React, { useState } from \"reactn\";\nimport styled, { AnyStyledComponent, CSSProperties } from \"styled-components\";\nimport { Icon } from \"@iconify/react\";\nimport chevronUp from \"@iconify-icons/feather/chevron-up\";\nimport chevronDown from \"@iconify-icons/feather/chevron-down\";\nimport bxTrashAlt from \"@iconify-icons/bx/bx-trash-alt\";\n\nimport { codeColor, grey } from \"../../constants\";\nimport { Button } from \"../button\";\nimport { CodeEditor } from \"../codeEditor\";\n\ninterface DeleteProps {\n  visible: string;\n}\n\ninterface ContentBlock {\n  type: string;\n  value: string;\n}\n\nconst ContentBlock: AnyStyledComponent = styled.div`\n  display: flex;\n  border: 1px solid ${grey};\n  margin-bottom: 20px;\n`;\n\nconst ContentBlockInnerWrapper: AnyStyledComponent = styled.div`\n  padding: 20px;\n  width: ${(props: DeleteProps): string =>\n    props.visible === \"flex\" ? \"93%\" : \"100%\"};\n`;\n\nconst UpDownContainer: AnyStyledComponent = styled.div`\n  position: relative;\n  float: right;\n  margin-bottom: 15px;\n`;\n\nconst Arrow: AnyStyledComponent = styled(Icon)`\n  width: 40px;\n  height: 40px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst TextInput: AnyStyledComponent = styled.textarea`\n  width: 100%;\n  min-height: 82px;\n  background-color: ${codeColor};\n  outline: none;\n  border: none;\n  border-radius: 1px;\n  padding: 5px;\n  color: #f5f5f5;\n  resize: none;\n`;\n\nconst DeleteBlock: AnyStyledComponent = styled.div`\n  display: ${(props: DeleteProps): string => props.visible};\n  border-left: solid 1px #727272;\n  width: 7%;\n  text-align: center;\n  justify-content: center;\n  &:hover {\n    cursor: pointer;\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst TrashIcon: AnyStyledComponent = styled(Icon)`\n  align-self: center;\n  width: 22px;\n  height: 22px;\n`;\n\ninterface ContentBlock {\n  type: string;\n  value: string;\n}\n\ninterface StepContentProps {\n  content: ContentBlock;\n  index: number;\n  deleteBlock: (index: number) => void;\n  changeHandler: (\n    change: React.ChangeEvent<HTMLInputElement> | string,\n    index: number\n  ) => void;\n  changeOrder: (direction: \"up\" | \"down\", index: number) => void;\n  toggleBlockType: (type: string, index: number) => void;\n}\n\nconst StepContent: React.FC<StepContentProps> = (props): JSX.Element => {\n  const {\n    content,\n    index,\n    deleteBlock,\n    changeHandler,\n    changeOrder,\n    toggleBlockType\n  } = props;\n\n  const [hovering, setHovering] = useState(-1);\n\n  const codeInputStyle: CSSProperties = {\n    position: \"relative\",\n    backgroundColor: codeColor,\n    display: content.type === \"code\" ? \"block\" : \"none\"\n  };\n\n  return (\n    <ContentBlock\n      key={index.toString()}\n      onMouseEnter={(): void => {\n        setHovering(index);\n      }}\n      onMouseLeave={(): void => {\n        setHovering(-1);\n      }}\n    >\n      <ContentBlockInnerWrapper>\n        <Button\n          backgroundColor={\n            content.type === \"text\" ? \"rgba(256, 256, 256, 0.2)\" : \"none\"\n          }\n          submitFunction={(): void => {\n            toggleBlockType(\"text\", index);\n          }}\n          text=\"Text\"\n        />\n        <Button\n          backgroundColor={\n            content.type === \"code\" ? \"rgba(256, 256, 256, 0.2)\" : \"none\"\n          }\n          submitFunction={(): void => {\n            toggleBlockType(\"code\", index);\n          }}\n          text=\"Code\"\n        />\n        <UpDownContainer>\n          <Arrow\n            icon={chevronUp}\n            onClick={(): void => {\n              changeOrder(\"up\", index);\n            }}\n          />\n          <Arrow\n            icon={chevronDown}\n            onClick={(): void => {\n              changeOrder(\"down\", index);\n            }}\n          />\n        </UpDownContainer>\n        {content.type === \"code\" ? (\n          <CodeEditor\n            value={content.value}\n            customStyles={codeInputStyle}\n            onChange={(code: string): void => {\n              changeHandler(code, index);\n            }}\n          />\n        ) : (\n          <TextInput\n            value={content.value}\n            style={{\n              display: content.type === \"text\" ? \"block\" : \"none\"\n            }}\n            type=\"text\"\n            placeholder=\"Type text here...\"\n            onChange={(event: React.ChangeEvent<HTMLInputElement>): void => {\n              changeHandler(event, index);\n            }}\n          />\n        )}\n      </ContentBlockInnerWrapper>\n      <DeleteBlock\n        visible={hovering === index ? \"flex\" : \"none\"}\n        onClick={(): void => {\n          deleteBlock(index);\n        }}\n      >\n        <TrashIcon icon={bxTrashAlt} />\n      </DeleteBlock>\n    </ContentBlock>\n  );\n};\n\nexport { StepContent };\n","import React, { useGlobal } from \"reactn\";\nimport styled, { AnyStyledComponent } from \"styled-components\";\n\nimport { CodeEditor } from \"../codeEditor\";\nimport { EditorStep } from \"../../types/editorTypes\";\nimport { HintInput } from \"./hintInput\";\nimport { Header } from \"./header\";\nimport { Navbar } from \"../navbar\";\nimport { StepContent } from \"./stepContent\";\n\nimport { background, grey } from \"../../constants\";\nimport { Button } from \"../button\";\n\ninterface ContentBlock {\n  type: string;\n  value: string;\n}\n\nconst StyledEditorContainer: AnyStyledComponent = styled.div`\n  height: 100vh;\n  width: 100vw;\n  min-width: 900px;\n  display: flex;\n  flex-direction: row;\n  justify-items: stretch;\n  background: ${background};\n  overflow: auto;\n`;\n\nconst StyledEditor: AnyStyledComponent = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MainWrapper: AnyStyledComponent = styled.main`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: row;\n  flex-wrap: none;\n  flex: 1;\n`;\n\nconst StyledTitle: AnyStyledComponent = styled.div`\n  height: 42px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-items: stretch;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  border: 1px solid ${grey};\n  border-left: none;\n  border-right: none;\n`;\n\nconst StyledLeftHalf: AnyStyledComponent = styled.div`\n  height: 100%;\n  width: 50%;\n  color: white;\n  border-right: 1px solid ${grey};\n`;\n\nconst StyledRightHalf: AnyStyledComponent = styled.div`\n  height: 100%;\n  width: 50%;\n  color: white;\n  border-right: 1px solid ${grey};\n`;\n\nconst StyledStepSection: AnyStyledComponent = styled.div`\n  width: 100%;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem 2rem 2rem 2rem;\n`;\n\nconst StyledTextInput: AnyStyledComponent = styled.div`\n  height: 80px;\n  width: 100%;\n  color: white;\n  padding: 5px;\n  padding-left: 15px;\n  padding-right: 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledLabel: AnyStyledComponent = styled.label`\n  color: white;\n  width: 100%;\n  padding: 4px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StepContentBody: AnyStyledComponent = styled.div`\n  padding: 40px;\n`;\n\nconst ContentBlock: AnyStyledComponent = styled.div`\n  display: flex;\n  border: 1px solid ${grey};\n  margin-bottom: 20px;\n`;\n\nconst TutEditor: React.FC = (): JSX.Element => {\n  const [editorState] = useGlobal(\"editorState\");\n  const [editorSteps, setEditorSteps] = useGlobal(\"editorSteps\");\n  const [steps, setSteps] = useGlobal(\"editorSteps\");\n\n  const setStepState = (newStep: EditorStep): void => {\n    setSteps([\n      ...steps.slice(0, editorState.step),\n      newStep,\n      ...steps.slice(editorState.step + 1, steps.length)\n    ]);\n  };\n\n  const addBlock = (): void => {\n    const stepCopy = steps[editorState.step];\n    stepCopy.content.push({\n      type: \"text\",\n      value: \"\"\n    });\n\n    setStepState(stepCopy);\n  };\n\n  const deleteBlock = (index: number): void => {\n    const stepCopy = steps[editorState.step];\n    stepCopy.content = [\n      ...stepCopy.content.slice(0, index),\n      ...stepCopy.content.slice(index + 1, stepCopy.content.length)\n    ];\n\n    setStepState(stepCopy);\n  };\n\n  const changeOrder = (direction: \"up\" | \"down\", index: number): void => {\n    const stepCopy = steps[editorState.step];\n    const contentCopy = stepCopy.content;\n    let diff = 0;\n\n    if (direction === \"up\" && index - 1 >= 0) {\n      diff = -1;\n    } else if (direction === \"down\" && index + 1 < contentCopy.length) {\n      diff = 1;\n    }\n\n    const temp = contentCopy[index + diff];\n    contentCopy[index + diff] = contentCopy[index];\n    contentCopy[index] = temp;\n\n    stepCopy.content = contentCopy;\n    setStepState(stepCopy);\n  };\n\n  const toggleBlockType = (type: string, index: number): void => {\n    const stepCopy = steps[editorState.step];\n    stepCopy.content[index].type = type;\n    setStepState(stepCopy);\n  };\n\n  // This change handler works for both text blocks and code blocks\n  // by checking the type of the change argument.\n  const blockChangeHandler = (\n    change: React.ChangeEvent<HTMLInputElement> | string,\n    index: number\n  ): void => {\n    let changeText = \"\";\n    // Checks to see what type the change argument is because it can\n    // either be an onChange event or just a string, which is what Ace Editor\n    // uses for the code block\n    if (typeof change === \"object\" && change.target) {\n      changeText = change.target.value;\n    } else if (typeof change === \"string\") {\n      changeText = change;\n    } else return;\n\n    const stepCopy = steps[editorState.step];\n    stepCopy.content[index].value = changeText;\n    setStepState(stepCopy);\n  };\n\n  const changeEditorStepDetail = async (\n    attribute: string,\n    value: string\n  ): Promise<void> => {\n    const newStep = editorSteps[editorState.step];\n    newStep[attribute] = value;\n\n    await setEditorSteps([\n      ...editorSteps.slice(0, editorState.step),\n      newStep,\n      ...editorSteps.slice(editorState.step + 1, steps.length)\n    ]);\n  };\n\n  return (\n    <StyledEditorContainer>\n      <Navbar />\n      <StyledEditor>\n        <Header />\n        <MainWrapper>\n          <StyledLeftHalf>\n            <StyledTitle>\n              <h3>Step</h3>\n            </StyledTitle>\n            <StyledStepSection>\n              <StyledTextInput>\n                <StyledLabel>Step Title:</StyledLabel>\n                <HintInput\n                  attributeName=\"stepTitle\"\n                  value={editorSteps[editorState.step].stepTitle}\n                  setValue={changeEditorStepDetail}\n                  placeholder=\"Step Title\"\n                />\n              </StyledTextInput>\n              <StyledTextInput>\n                <StyledLabel>Hint:</StyledLabel>\n                <HintInput\n                  attributeName=\"stepHint\"\n                  value={editorSteps[editorState.step].stepHint}\n                  setValue={changeEditorStepDetail}\n                  placeholder=\"Hint\"\n                />\n              </StyledTextInput>\n              <StyledTextInput>\n                <StyledLabel>Success Message:</StyledLabel>\n                <HintInput\n                  attributeName=\"stepSuccess\"\n                  value={editorSteps[editorState.step].stepSuccess}\n                  setValue={changeEditorStepDetail}\n                  placeholder=\"Success Message\"\n                />\n              </StyledTextInput>\n            </StyledStepSection>\n            <StyledTitle>\n              <h3>Step Content</h3>\n            </StyledTitle>\n            <StepContentBody>\n              <div>\n                {steps[editorState.step].content.map(\n                  (content: ContentBlock, index: number) => {\n                    return (\n                      <StepContent\n                        content={content}\n                        index={index}\n                        key={index.toString()}\n                        deleteBlock={deleteBlock}\n                        changeOrder={changeOrder}\n                        toggleBlockType={toggleBlockType}\n                        changeHandler={blockChangeHandler}\n                      />\n                    );\n                  }\n                )}\n              </div>\n              <Button\n                submitFunction={addBlock}\n                width=\"150px\"\n                text=\"Add Block\"\n              />\n            </StepContentBody>\n          </StyledLeftHalf>\n\n          <StyledRightHalf>\n            <StyledTitle>\n              <h3>Code Solution</h3>\n            </StyledTitle>\n            <CodeEditor\n              value={editorSteps[editorState.step].answer}\n              onChange={(code: string): Promise<void> =>\n                changeEditorStepDetail(\"answer\", code)\n              }\n              customStyles={{\n                position: \"relative\",\n                backgroundColor: background\n              }}\n            />\n          </StyledRightHalf>\n        </MainWrapper>\n      </StyledEditor>\n    </StyledEditorContainer>\n  );\n};\n\nexport { TutEditor };\n","import React, { useGlobal } from \"reactn\";\n\nimport { initializeGlobalState } from \"../utils/initializeGlobalState\";\nimport { EditorWelcome } from \"../components/editorWelcome\";\nimport { TutEditor } from \"../components/tutorialEditor\";\n\nimport \"../styles/normalize.css\";\n\ninitializeGlobalState();\n\nconst EditorPage = (): JSX.Element => {\n  const [editorState] = useGlobal(\"editorState\");\n\n  return (\n    <>\n      {editorState.selectedTutorial === \"\" ? <EditorWelcome /> : <TutEditor />}\n    </>\n  );\n};\n\nexport default EditorPage;\n"],"sourceRoot":""}